import urllib.request
import urllib.parse
import http.cookiejar
import json

def test_login_detailed():
    print("üîç DIAGN√ìSTICO DETALHADO DO LOGIN")
    print("=" * 50)
    
    base_url = "http://127.0.0.1:5003"
    
    # Criar um cookie jar para manter a sess√£o
    cookie_jar = http.cookiejar.CookieJar()
    opener = urllib.request.build_opener(urllib.request.HTTPCookieProcessor(cookie_jar))
    
    try:
        # 1. Primeiro acessar a p√°gina de login (GET)
        print("1Ô∏è‚É£ Acessando p√°gina de login (GET)...")
        req = urllib.request.Request(f"{base_url}/login")
        response = opener.open(req)
        
        print(f"   Status: {response.status}")
        print(f"   Headers: {dict(response.headers)}")
        
        content = response.read().decode('utf-8')
        print(f"   Conte√∫do encontrado: {'CLIVER SEGUROS' in content}")
        print(f"   Formul√°rio encontrado: {'<form' in content}")
        
        # 2. Fazer login (POST)
        print("\n2Ô∏è‚É£ Fazendo login (POST)...")
        login_data = urllib.parse.urlencode({
            'username': 'admin',
            'password': 'admin'
        }).encode('utf-8')
        
        req = urllib.request.Request(f"{base_url}/login", data=login_data)
        req.add_header('Content-Type', 'application/x-www-form-urlencoded')
        req.add_header('Referer', f"{base_url}/login")
        
        response = opener.open(req)
        
        print(f"   Status: {response.status}")
        print(f"   URL final: {response.url}")
        
        # Se redirecionou, foi sucesso
        if response.url.endswith('/dashboard') or 'dashboard' in response.url:
            print("   ‚úÖ LOGIN SUCESSO - Redirecionado para dashboard")
            
            # Tentar acessar o dashboard
            print("\n3Ô∏è‚É£ Acessando dashboard...")
            req = urllib.request.Request(f"{base_url}/dashboard")
            response = opener.open(req)
            content = response.read().decode('utf-8')
            
            if 'dashboard' in content.lower() or 'cliver' in content.lower():
                print("   ‚úÖ Dashboard acessado com sucesso")
                return True
            else:
                print("   ‚ùå Erro ao acessar dashboard")
                return False
        else:
            print("   ‚ùå LOGIN FALHOU - N√£o redirecionou")
            content = response.read().decode('utf-8')
            if 'erro' in content.lower() or 'inv√°lid' in content.lower():
                print("   Mensagem de erro encontrada na resposta")
            return False
            
    except Exception as e:
        print(f"   ‚ùå Erro durante o teste: {e}")
        return False

def test_direct_dashboard():
    print("\n4Ô∏è‚É£ Testando acesso direto ao dashboard (sem login)...")
    try:
        response = urllib.request.urlopen("http://127.0.0.1:5003/dashboard", timeout=5)
        if response.url.endswith('/login'):
            print("   ‚úÖ Redirecionamento para login funcionando (seguran√ßa OK)")
        else:
            print("   ‚ö†Ô∏è Dashboard acess√≠vel sem login (problema de seguran√ßa)")
    except Exception as e:
        print(f"   ‚ùå Erro: {e}")

if __name__ == "__main__":
    success = test_login_detailed()
    test_direct_dashboard()
    
    if success:
        print("\nüéâ SISTEMA FUNCIONANDO PERFEITAMENTE!")
        print("üí° Se ainda h√° problemas no navegador, tente:")
        print("   1. Limpar cache e cookies")
        print("   2. Usar modo inc√≥gnito")
        print("   3. Verificar se n√£o h√° bloqueadores")
    else:
        print("\n‚ö†Ô∏è PROBLEMA DETECTADO NO LOGIN!")
        print("üîß Verificando poss√≠veis solu√ß√µes...")